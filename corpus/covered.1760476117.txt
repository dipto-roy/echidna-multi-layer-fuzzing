/home/dip-roy/echidna_dev/echidna_1/echidna/contact/bonding-curve.sol
  1 |     | // SPDX-License-Identifier: MIT
  2 |     | pragma solidity ^0.8.20;
  3 |     | 
  4 | *r  | contract BondingCurveAMM {
  5 | *   |     uint256 public reserveETH;
  6 | *   |     uint256 public reserveTOKEN;
  7 | *   |     uint256 public constant K = 1e18;
  8 |     | 
  9 | *   |     function addLiquidity() external payable {
 10 | *   |         reserveETH += msg.value;
 11 | *   |         reserveTOKEN += msg.value; // 1:1 dummy rule
 12 |     |     }
 13 |     | 
 14 | *   |     function swapETHForTOKEN() external payable {
 15 |     |         // simplistic x+y curve; not realistic, but tests arithmetic
 16 | *   |         reserveETH += msg.value;
 17 | *   |         uint out = msg.value; 
 18 | *r  |         require(reserveTOKEN >= out, "liquidity");
 19 | *   |         reserveTOKEN -= out;
 20 |     |     }
 21 |     | 
 22 |     |     function echidna_reserves_non_negative() external view returns (bool) {
 23 |     |         return reserveETH >= 0 && reserveTOKEN >= 0;
 24 |     |     }
 25 |     | }
 26 |     | 

